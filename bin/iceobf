#!/usr/bin/env php
<?php

require __DIR__."/../vendor/autoload.php";

define("TMP_DIR", "/tmp");

use IceTeaObfuscator\Obfuscator;

function err(string $msg): void
{
	fprintf(STDERR, "Error: %s\n", $msg);
	exit(1);
}

array_shift($argv);

$key = "icetea123";
$shebang = null;
$outfile = "a.out.phx";
$tSkip = 0;
$files = [];

foreach ($argv as $k => $v) {

	if ($tSkip) {
		$tSkip = 0;
		continue;
	}

	if ($v[0] === "-") {
		if ($v[1] === "-") {
			
		} else {
			$vLen = strlen($v);
			if ($v[1] === "o") {
				if ($vLen == 2) {
					(
						isset($argv[$k+1]) && $argv[$k+1][0] !== "-"
					) or err("-o option needs a value.");
					$outfile = $argv[$k+1];
					$tSkip = 1;
				} else {
					$outfile = substr($v, 2);
				}
			}

			if ($v[1] === "s") {
				if ($vLen == 2) {
					(
						isset($argv[$k+1]) && $argv[$k+1][0] !== "-"
					) or err("-s option needs a value.");
					$shebang = $argv[$k+1];
					$tSkip = 1;
				} else {
					$shebang = substr($v, 2);
				}
			}

			if ($v[1] === "k") {
				if ($vLen == 2) {
					(
						isset($argv[$k+1]) && $argv[$k+1][0] !== "-"
					) or err("-k option needs a value.");
					$key = $argv[$k+1];
					$tSkip = 1;
				} else {
					$key = substr($v, 2);
				}
			}
		}
	} else {
		$files[] = $v;
	}
}
$sFile = sizeof($files);
if ($sFile === 0) {
	err("No input file");
} else if ($sFile > 1) {
	err("Cannot obfuscate multiple files.\nParsed files: ".json_encode($files));
}

// // Debug only
// var_dump([
// 	"outfile" => $outfile,
// 	"shebang" => $shebang,
// 	"key" => $key
// ]);
// die;

$st = new Obfuscator($files[0], $outfile);
$st->setKey($key);
if (is_string($shebang)) {
	$st->setShebang($shebang);
}
$st->obfuscate();
