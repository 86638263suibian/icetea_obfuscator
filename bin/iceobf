#!/usr/bin/env php
<?php

require __DIR__."/../vendor/autoload.php";

use IceTeaObfuscator\Obfuscator;

function err(string $msg): void
{
	fprintf(STDERR, "Error: %s\n", $msg);
	exit(1);
}

array_shift($argv);

$key = null;
$shebang = null;
$outfile = "a.out.phx";
$tSkip = 0;
$files = [];
foreach ($argv as $k => $v) {

	if ($tSkip) {
		$tSkip = 0;
		continue;
	}

	if ($v[0] === "-") {
		if ($v[1] === "-") {
			
		} else {
			$vLen = strlen($v);
			if ($v[1] === "o") {
				if ($vLen == 2) {
					(
						isset($argv[$k+1]) && $argv[$k+1][0] !== "-"
					) or err("-o option needs a value.");
					$outfile = $argv[$k+1];
					$tSkip = 1;
				} else {
					$outfile = substr($v, 2);
				}
			}

			if ($v[1] === "s") {
				if ($vLen == 2) {
					(
						isset($argv[$k+1]) && $argv[$k+1][0] !== "-"
					) or err("-s option needs a value.");
					$shebang = $argv[$k+1];
					$tSkip = 1;
				} else {
					$shebang = substr($v, 2);
				}
			}

			if ($v[1] === "k") {
				if ($vLen == 2) {
					(
						isset($argv[$k+1]) && $argv[$k+1][0] !== "-"
					) or err("-k option needs a value.");
					$key = $argv[$k+1];
					$tSkip = 1;
				} else {
					$key = substr($v, 2);
				}
			}
		}
	} else {
		$files[] = $v;
	}
}

if (sizeof($files) === 0) {
	err("No input file");
}

var_dump([
	"outfile" => $outfile,
	"shebang" => $shebang,
	"key" => $key
]);

die;
$st = new Obfuscator();
$st->obfuscate();
